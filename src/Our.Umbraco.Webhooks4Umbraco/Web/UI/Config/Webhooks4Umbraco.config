<?xml version="1.0"?>
<Webhooks4Umbraco>
  <Handlers>

    <!--
    
      DOCUMENTATION
      ===================================================================================
      You define a webhook handler by adding a <Handler> XML tag with a `webhookUrl` attribute.
      Within the handler, define a list of events you wish to subscribe to, providing
      the event name, and the assembly qualified type name of the type that broadcasts it.
      
      In addition, within an event, you can also provide a list of argument type 
      converters to cast specific argument types into simple serializable objects
      which will get included in the webhook request (OOTB, Webhooks4Umbraco will simply
      notify you of an event. If you want to gather information from an event, you need
      to use an ArgsTypeConverter to convert the args into something meaningful).
      
      If you need to pass additional contextual information to a webhook request you can
      also do this by implementing and registering one or more CustomDataResolvers to 
      return simple serializable objects that will be included in each webhook request.
    
      <Handler webhookUrl="http://url.to/webhook/handler">
        <Events>
          <Event name="Saved" type="Umbraco.Core.Services.ContentService, Umbraco.Core">
            <ArgConverters>
              <ArgConverter type="Our.Umbraco.Webhooks4Umbraco.Converters.UmbracoContentSaveEventArgsConverter, Our.Umbraco.Webhooks4Umbraco" />
            </ArgConverters>
          </Event>
        </Events>
        <CustomDataResolvers>
          <CustomDataResolver type="My.Library.CustomDataResovler, My.Library" />
        </CustomDataResolvers>
      </Handler>
    
    -->

  </Handlers>
</Webhooks4Umbraco>